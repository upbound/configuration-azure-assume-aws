apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xaks.azure.platform.upbound.io
  labels:
    provider: azure
spec:
  compositeTypeRef:
    apiVersion: azure.platform.upbound.io/v1alpha1
    kind: XAKS
  mode: Pipeline
  pipeline:
    - step: patch-and-transform
      functionRef:
        name: crossplane-contrib-function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        patchSets:
          - name: providerConfigRef
            patches:
              - fromFieldPath: spec.parameters.providerConfigName
                toFieldPath: spec.providerConfigRef.name
                type: FromCompositeFieldPath
          - name: deletionPolicy
            patches:
              - fromFieldPath: spec.parameters.deletionPolicy
                toFieldPath: spec.deletionPolicy
                type: FromCompositeFieldPath
          - name: region
            patches:
              - fromFieldPath: spec.parameters.region
                toFieldPath: spec.forProvider.location
                type: FromCompositeFieldPath
        resources:
          - name: kubernetesCluster
            base:
              apiVersion: containerservice.azure.upbound.io/v1beta1
              kind: KubernetesCluster
              spec:
                forProvider:
                  defaultNodePool:
                    - name: default
                  identity:
                    - type: SystemAssigned
                  oidcIssuerEnabled: true
                  workloadIdentityEnabled: true
            connectionDetails:
              - fromConnectionSecretKey: kubeconfig
                name: kubeconfig
                type: FromConnectionSecretKey
            patches:
              - type: PatchSet
                patchSetName: providerConfigRef
              - type: PatchSet
                patchSetName: deletionPolicy
              - type: PatchSet
                patchSetName: region
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.version
                toFieldPath: spec.forProvider.kubernetesVersion
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: metadata.name
                transforms:
                  - type: string
                    string:
                      fmt: '%s-aks'
                      type: Format
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: spec.forProvider.resourceGroupNameSelector.matchLabels[azure.platform.upbound.io/network-id]
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: spec.forProvider.defaultNodePool[0].vnetSubnetIdSelector.matchLabels[azure.platform.upbound.io/network-id]
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: spec.forProvider.dnsPrefix
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.nodes.instanceType
                toFieldPath: spec.forProvider.defaultNodePool[0].vmSize
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.nodes.count
                toFieldPath: spec.forProvider.defaultNodePool[0].nodeCount
              - type: FromCompositeFieldPath
                fromFieldPath: spec.writeConnectionSecretToRef.namespace
                toFieldPath: spec.writeConnectionSecretToRef.namespace
              - type: FromCompositeFieldPath
                fromFieldPath: metadata.uid
                toFieldPath: spec.writeConnectionSecretToRef.name
                transforms:
                  - type: string
                    string:
                      fmt: '%s-akscluster'
                      type: Format
              - type: ToCompositeFieldPath
                fromFieldPath: status.atProvider.oidcIssuerUrl
                toFieldPath: status.aks.oidcIssuerUrl
                policy:
                  fromFieldPath: Optional
              - type: ToCompositeFieldPath
                fromFieldPath: status.atProvider.oidcIssuerUrl
                toFieldPath: status.aks.oidcIssuerUrl
                policy:
                  fromFieldPath: Optional
              - type: ToCompositeFieldPath
                fromFieldPath: status.atProvider.oidcIssuerUrl
                toFieldPath: status.aks.oidcIssuerUri
                transforms:
                  - string:
                      trim: https://
                      type: TrimPrefix
                    type: string
                policy:
                  fromFieldPath: Optional

          - name: providerConfigHelm
            base:
              apiVersion: helm.crossplane.io/v1beta1
              kind: ProviderConfig
              spec:
                credentials:
                  secretRef:
                    key: kubeconfig
                  source: Secret
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: metadata.name
              - type: FromCompositeFieldPath
                fromFieldPath: spec.writeConnectionSecretToRef.namespace
                toFieldPath: spec.credentials.secretRef.namespace
              - type: FromCompositeFieldPath
                fromFieldPath: metadata.uid
                toFieldPath: spec.credentials.secretRef.name
                transforms:
                  - type: string
                    string:
                      fmt: '%s-akscluster'
                      type: Format
            readinessChecks:
              - type: None

          - name: providerConfigKubernetes
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha1
              kind: ProviderConfig
              spec:
                credentials:
                  secretRef:
                    key: kubeconfig
                  source: Secret
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: metadata.name
              - type: FromCompositeFieldPath
                fromFieldPath: spec.writeConnectionSecretToRef.namespace
                toFieldPath: spec.credentials.secretRef.namespace
              - type: FromCompositeFieldPath
                fromFieldPath: metadata.uid
                toFieldPath: spec.credentials.secretRef.name
                transforms:
                  - type: string
                    string:
                      fmt: '%s-akscluster'
                      type: Format
            readinessChecks:
              - type: None

          - name: aws-oidc-provider
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: OpenIDConnectProvider
              spec:
                forProvider:
                  clientIdList:
                    - sts.amazonaws.com
                  thumbprintList:
                    - df3c24f9bfd666761b268073fe06d1cc8d4f82a4 # westus.oic.prod-aks.azure.com
            patches:
              - type: PatchSet
                patchSetName: providerConfigRef
              - type: PatchSet
                patchSetName: deletionPolicy
              - type: FromCompositeFieldPath
                fromFieldPath: status.aks.oidcIssuerUrl
                toFieldPath: spec.forProvider.url
                policy:
                  fromFieldPath: Optional
              - type: ToCompositeFieldPath
                fromFieldPath: status.atProvider.arn
                toFieldPath: status.aws.accountId
                transforms:
                  - string:
                      regexp:
                        group: 1
                        match: arn:aws:iam::(\d{12}):oidc-provider/.+
                      type: Regexp
                    type: string
                policy:
                  fromFieldPath: Optional

          - name: aws-role-assume-role-with-webidentity
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: Role
              spec:
                forProvider:
                  managedPolicyArns:
                    - arn:aws:iam::aws:policy/AdministratorAccess
            patches:
              - type: PatchSet
                patchSetName: providerConfigRef
              - type: PatchSet
                patchSetName: deletionPolicy
              - type: CombineFromComposite
                combine:
                  strategy: string
                  string:
                    fmt: |
                      {
                          "Version": "2012-10-17",
                          "Statement": [
                              {
                                  "Effect": "Allow",
                                  "Principal": {
                                      "Federated": "arn:aws:iam::%[1]s:oidc-provider/%[2]s"
                                  },
                                  "Action": "sts:AssumeRoleWithWebIdentity",
                                  "Condition": {
                                      "StringEquals": {
                                          "%[2]s:sub": "system:serviceaccount:upbound-system:upbound-provider-aws-ec2",
                                          "%[2]s:aud": "sts.amazonaws.com"
                                      }
                                  }
                              }
                          ]
                      }
                  variables:
                    - fromFieldPath: status.aws.accountId
                    - fromFieldPath: status.aks.oidcIssuerUri
                toFieldPath: spec.forProvider.assumeRolePolicy
                policy:
                  fromFieldPath: Required
              - type: ToCompositeFieldPath
                fromFieldPath: status.atProvider.arn
                toFieldPath: status.aws.providerRoleArn
                policy:
                  fromFieldPath: Optional

          - name: crossplane
            base:
              apiVersion: helm.crossplane.io/v1beta1
              kind: Release
              spec:
                rollbackLimit: 3
                forProvider:
                  namespace: upbound-system
                  chart:
                    name: universal-crossplane
                    repository: https://charts.upbound.io/stable
                    version: "1.16.0-up.1"
                  values: {}
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: spec.providerConfigRef.name

          - name: provider
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha2
              kind: Object
              spec:
                forProvider:
                  manifest:
                    apiVersion: pkg.crossplane.io/v1
                    kind: Provider
                    metadata:
                      name: upbound-provider-aws-ec2
                    spec:
                      package: xpkg.upbound.io/upbound/provider-aws-ec2:v1.7.0
                      runtimeConfigRef:
                        apiVersion: pkg.crossplane.io/v1beta1
                        kind: DeploymentRuntimeConfig
                        name: upbound-provider-aws-ec2
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: spec.providerConfigRef.name

          - name: drc
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha2
              kind: Object
              spec:
                forProvider:
                  manifest:
                    apiVersion: pkg.crossplane.io/v1beta1
                    kind: DeploymentRuntimeConfig
                    metadata:
                      name: upbound-provider-aws-ec2
                    spec:
                      serviceAccountTemplate:
                        metadata:
                          name: upbound-provider-aws-ec2
                          annotations:
                            azure.workload.identity/client-id: "upbound-provider-aws-ec2"
                      deploymentTemplate:
                        spec:
                          selector: {}
                          replicas: 1
                          template:
                            metadata:
                              labels:
                                azure.workload.identity/use: "true"
                            spec:
                              containers:
                                - name: package-runtime
                              volumes:
                                - name: azure-identity-token
                                  projected:
                                    defaultMode: 420
                                    sources:
                                    - serviceAccountToken:
                                        audience: sts.amazonaws.com # we need to override this
                                        expirationSeconds: 3600
                                        path: azure-identity-token
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: spec.providerConfigRef.name

          - name: user-assigned-identity
            base:
              apiVersion: managedidentity.azure.upbound.io/v1beta1
              kind: UserAssignedIdentity
              spec:
                forProvider:
                  name: upbound-provider-aws-ec2
            patches:
              - type: PatchSet
                patchSetName: providerConfigRef
              - type: PatchSet
                patchSetName: deletionPolicy
              - type: PatchSet
                patchSetName: region
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: spec.forProvider.resourceGroupNameSelector.matchLabels[azure.platform.upbound.io/network-id]
              - type: ToCompositeFieldPath
                fromFieldPath: status.atProvider.id
                toFieldPath: status.aks.userAssignedIdentityId
                policy:
                  fromFieldPath: Optional
              - type: ToCompositeFieldPath
                fromFieldPath: status.atProvider.principalId
                toFieldPath: status.aks.userAssignedIdentitiyObjectId
                policy:
                  fromFieldPath: Optional

          - name: federated-identity-credential
            base:
              apiVersion: managedidentity.azure.upbound.io/v1beta1
              kind: FederatedIdentityCredential
              spec:
                forProvider:
                  audience:
                    - sts.amazonaws.com # we need to set this for aws
                  subject: "system:serviceaccount:upbound-system:upbound-provider-aws-ec2"
            patches:
              - type: PatchSet
                patchSetName: providerConfigRef
              - type: PatchSet
                patchSetName: deletionPolicy
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: spec.forProvider.resourceGroupNameSelector.matchLabels[azure.platform.upbound.io/network-id]
              - type: FromCompositeFieldPath
                fromFieldPath: status.aks.oidcIssuerUrl
                toFieldPath: spec.forProvider.issuer
                policy:
                  fromFieldPath: Required
              - type: FromCompositeFieldPath
                fromFieldPath: status.aks.userAssignedIdentityId
                toFieldPath: spec.forProvider.parentId
                policy:
                  fromFieldPath: Required

          - name: providerconfig-aws
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha2
              kind: Object
              spec:
                forProvider:
                  manifest:
                    apiVersion: aws.upbound.io/v1beta1
                    kind: ProviderConfig
                    metadata:
                      name: pod-identity
                    spec:
                      credentials:
                        source: WebIdentity
                        webIdentity:
                          tokenConfig:
                            source: Filesystem
                            fs:
                              path: /var/run/secrets/azure/tokens/azure-identity-token
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: spec.providerConfigRef.name
              - type: FromCompositeFieldPath
                fromFieldPath: status.aws.providerRoleArn
                toFieldPath: spec.forProvider.manifest.spec.credentials.webIdentity.roleARN
                policy:
                  fromFieldPath: Required

          - name: vpc-via-azure
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha2
              kind: Object
              spec:
                readiness:
                  policy: AllTrue # check that the vpc is ready after provider-aws AssumeRoleWithWebidentity to aws
                forProvider:
                  manifest:
                    apiVersion: ec2.aws.upbound.io/v1beta1
                    kind: VPC
                    metadata:
                      name: cfg-azure-assume-aws
                    spec:
                      forProvider:
                        cidrBlock: 10.1.0.0/16
                        region: eu-west-1
                      providerConfigRef:
                        name: pod-identity
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: spec.providerConfigRef.name

    - step: ordered-creation
      functionRef:
        name: crossplane-contrib-function-sequencer
      input:
        apiVersion: template.fn.crossplane.io/v1beta1
        kind: Input
        rules:
          - sequence:
              - kubernetesCluster
              - aws-oidc-provider
          - sequence:
              - kubernetesCluster
              - aws-role-assume-role-with-webidentity
          - sequence:
              - kubernetesCluster
              - crossplane
          - sequence:
              - kubernetesCluster
              - provider
          - sequence:
              - kubernetesCluster
              - drc
          - sequence:
              - kubernetesCluster
              - providerconfig-aws
          - sequence:
              - providerconfig-aws
              - vpc-via-azure
